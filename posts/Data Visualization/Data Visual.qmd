---
title: "Data Vis"
author: Shifa Maqsood
---

#Data types

There are different data types in R: numeric, character, and logical

**Numeric data**

It has two type: integer and double

Integers do not have decimal point and double do.

```{r}
numeric_data <-c(10.4,7,4) #DOUBLE
typeof(numeric_data[1])
typeof(numeric_data[2])
typeof(numeric_data[3])

is.numeric(numeric_data[3]) #to check the data type. retuns false or true

typeof(7L)

```

**Character data**

Characters are also called strings. Anything between quotation marks "" is treated as character

```{r}

typeof("what is the date today?") #tells the type of data

my_string <- "The instructor said, \"R is cool,\" and the class agreed."
cat(my_string) # cat() prints the arguments


```

**Logical**

```{r}
x<- c(4,5,6,7) #this one asks if 7 is found in the object x
 7 %in% x 
class(TRUE) #it tells that the class of true is logical





```

**Factor data**

When you use factor, you are telling R that this is categorical data with levels. This can be very helpful in various types of statistical analysis.

```{r}

myfactor <- factor("B", levels = c("A", "B","C")) # B is a factor which has three levels A,B and C
myfactor 



```

#Tidy data

Untidy data can be hard for us and the computer to read and do anlaysis on it. In tidy data, every column is variable, every row is an observation and every cell is a single value.

```{r}

untidy_data <- read.csv("CopyOfdata/untidy_data.csv")


untidy_data

#This is an example of untidy data. 
#It shows that itemprice has two values in each cell
#It is hard to read as it shows the data for all three years repeatedly which can be confusing to analyze.

```

```{r}

tidy_data <- read.csv("CopyOfdata/tidy_data.csv")

tidy_data #This is an example of tidy data. It shows how each observatio ihas its own row and each value has its own cell.

```

#GGplot

```{r}
library(ggplot2)

survey_data <- read.csv("https://psyteachr.github.io/ads-v2/data/survey_data.csv")

survey_ggplot <- ggplot(survey_data, aes(x = wait_time, y = call_time)) +
  geom_point(colour= "red") +
  geom_smooth(method =lm) + 
  
  scale_x_continuous(name = "Wait Time (seconds)",
                     breaks = seq(from=0, to= 600, by=60))+
  
  scale_y_continuous(name = "Call time (seconds)",
                     breaks = seq(from = 0, to = 600, by = 30))+
  labs(title = "The relationship between wait time and call time",
       subtitle = "2020 Call Data",
       caption = "Figure 1. As wait time increases, call time increases.")
  


survey_ggplot


```
