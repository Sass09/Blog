{
  "hash": "fdbc29b8ff5a955e78f5a4c590187c6e",
  "result": {
    "markdown": "---\ntitle: \"Midterm Part 2\"\nautor: \"Shifa Maqsood\"\nimage: \"Unknown.png\"\n---\n\n\n##Easy problem\n\nProblem 1:\nList all of the odd numbers from 1 to 100.\nyou could use the seq() function\nHow could you do this without using the seq() function? Consider using the mod function %%, which evaluates whether or not there is a remainder when dividing one number by another.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nfor (i in 1:100){\n  if(i%%2)\n    print(i)\n}\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 1\n[1] 3\n[1] 5\n[1] 7\n[1] 9\n[1] 11\n[1] 13\n[1] 15\n[1] 17\n[1] 19\n[1] 21\n[1] 23\n[1] 25\n[1] 27\n[1] 29\n[1] 31\n[1] 33\n[1] 35\n[1] 37\n[1] 39\n[1] 41\n[1] 43\n[1] 45\n[1] 47\n[1] 49\n[1] 51\n[1] 53\n[1] 55\n[1] 57\n[1] 59\n[1] 61\n[1] 63\n[1] 65\n[1] 67\n[1] 69\n[1] 71\n[1] 73\n[1] 75\n[1] 77\n[1] 79\n[1] 81\n[1] 83\n[1] 85\n[1] 87\n[1] 89\n[1] 91\n[1] 93\n[1] 95\n[1] 97\n[1] 99\n```\n:::\n:::\n\n\nProblem 2 :\nGenerate 100 random numbers within a specific range\nrunif can do this\n\n::: {.cell}\n\n```{.r .cell-code}\nrunif(100,1,100)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n  [1] 21.258418 50.964043 70.903722 87.173210 16.695212 73.073811 51.046567\n  [8] 39.451603 51.658284 74.905202 66.248468 10.678605 95.053985  3.421871\n [15] 42.618388 82.072405 63.689877 70.684758 81.133528 78.954426  8.815671\n [22] 36.181748 88.308323 60.945155 35.485430 28.339058 87.497961 64.148747\n [29] 63.349227 54.643512 10.896349 98.572054 94.208854 79.280627 30.030701\n [36] 43.366495 11.911864 88.027844 44.558063 49.139229 54.142750 28.805858\n [43] 93.652578 68.698916 75.197829 79.751025  3.656771 31.540686 12.439891\n [50]  2.622655 77.230015 23.678032 16.078053 63.347620 23.303808 10.127948\n [57] 94.313371 33.453750 22.613649 70.028861 45.571322 86.708065 76.358984\n [64] 12.787500 12.843111 36.756489 76.875462 37.734986 16.314075 15.441524\n [71] 67.254281 47.619489 75.919205 40.616242 39.571526 46.006636 33.143976\n [78] 47.963601 92.627850 21.849036 58.868373 23.488515 84.707954 71.111479\n [85] 47.539405 98.833812 77.920700 41.153195 98.755082  5.994807 27.833196\n [92] 11.364102 27.547417 20.291137 35.913706 51.235124  6.868133  9.588367\n [99]  4.304036 33.328631\n```\n:::\n:::\n\n\nProblem 3:\nreate a variable that stores a 20x20 matrix of random numbers\n\n::: {.cell}\n\n:::",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}