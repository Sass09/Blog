{
  "hash": "d6dd4a3c11379fe786ae8fd2712b4f6d",
  "result": {
    "markdown": "::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.3     ✔ readr     2.1.4\n✔ forcats   1.0.0     ✔ stringr   1.5.0\n✔ ggplot2   3.4.1     ✔ tibble    3.2.1\n✔ lubridate 1.9.2     ✔ tidyr     1.3.0\n✔ purrr     1.0.1     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the \u001b]8;;http://conflicted.r-lib.org/\u0007conflicted package\u001b]8;;\u0007 to force all conflicts to become errors\n```\n:::\n\n```{.r .cell-code}\nlibrary(dplyr)\nlibrary(ggplot2)\n\ntuesdata <- tidytuesdayR::tt_load('2023-11-07')\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n--- Compiling #TidyTuesday Information for 2023-11-07 ----\n--- There is 1 file available ---\n--- Starting Download ---\n```\n:::\n\n::: {.cell-output .cell-output-stdout}\n```\n\n\tDownloading file 1 of 1: `house.csv`\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\n--- Download complete ---\n```\n:::\n\n```{.r .cell-code}\nhouse <-tuesdata$house\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ncleandata<-house %>%\n filter(stage == \"GEN\" & year== \"2022\") %>%\n  select(state, stage, party, candidatevotes) %>%\n  drop_na(party) %>%\n  filter(party  %in% c(\"DEMOCRAT\", \"REPUBLICAN\")) \n  \n\n#total votes for each party in each state \n  \ntotalvotes <- cleandata %>%\n  group_by(state, party) %>%\n  summarise(total = sum(candidatevotes)) %>%\n  slice(which.max(total))\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n`summarise()` has grouped output by 'state'. You can override using the\n`.groups` argument.\n```\n:::\n\n```{.r .cell-code}\ntotalvotes <- totalvotes[!(totalvotes$state == \"ALASKA\" | totalvotes$state== \"HAWAII\"),]    \n\nusmapp <- map_data(\"state\")\n\n#it has to match state in map_data function\n\ntotalvotes$state <- tolower(totalvotes$state)\n\n\nelectiondf <- left_join(totalvotes, usmapp, by = c(\"state\" = \"region\"))\n\n\nggplot(data = electiondf, aes(x= long, y= lat, group = group, fill= party))+\n  geom_polygon(color= \"black\", size = 0.1) +\n    scale_fill_manual(values = c(\"DEMOCRAT\" = \"blue\", \"REPUBLICAN\" = \"red\")) + # Set colors for parties\n  labs(title = \"Party with Most Votes in Each State\") +\n  theme_void()\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: Using `size` aesthetic for lines was deprecated in ggplot2 3.4.0.\nℹ Please use `linewidth` instead.\n```\n:::\n\n::: {.cell-output-display}\n![](More-tidy-tuesday_files/figure-html/unnamed-chunk-2-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n#who won tht most votes in each state? \n\nmostvotes <- totalvotes %>%\n    group_by(state) %>%\n    top_n(1,total) \n\n#skipped Alaska and Hawaii because map_data functiom does not contain either\n\n\nmostvotes <- mostvotes[!(mostvotes$state== \"ALASKA\" | mostvotes$state== \"HAWAII\"),]\n\n#visualise it \n\nggplot(data = mostvotes, aes(x= state, y= total, fill= party)) +\n  geom_bar(stat = \"identity\", position = \"dodge\")\n```\n\n::: {.cell-output-display}\n![](More-tidy-tuesday_files/figure-html/unnamed-chunk-3-1.png){width=672}\n:::\n:::\n",
    "supporting": [
      "More-tidy-tuesday_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}