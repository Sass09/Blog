{
  "hash": "2e0d249cf24f163e3451704d762b75a2",
  "result": {
    "markdown": "---\ntitle: \"Data Summaries\"\nauthor: Shifa Maqsood\n---\n\n\n\n\n#Social media data and summarise ()\n\n::: {.cell}\n\n```{.r .cell-code}\ntweets <- readRDS(\"ncod_tweets.rds\")\nfavourite_summary <- summarise(tweets,\n                           mean_favs = mean(favorite_count),\n                           median_favs = median(favorite_count),\n                           min_favs = min(favorite_count),\n                           max_favs = max(favorite_count))\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ntweet_summary <- tweets %>%\n  summarise(mean_favs = mean(favorite_count),\n            median_favs = quantile(favorite_count, .5),\n            n = n(),\n            min_date = min(created_at),\n            max_date = max(created_at))\n\nglimpse(tweet_summary)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nRows: 1\nColumns: 5\n$ mean_favs   <dbl> 29.71732\n$ median_favs <dbl> 3\n$ n           <int> 28626\n$ min_date    <dttm> 2021-10-10 00:10:02\n$ max_date    <dttm> 2021-10-12 20:12:27\n```\n:::\n:::\n\n\n\n\n\n\n**GGPLOT of favorite_count** \n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(tweets, aes(x = favorite_count)) +\n  geom_histogram(bins = 25) +\n  scale_x_continuous(trans = \"pseudo_log\", #it goes up in intervals of magnitude and it helps see how much is between each interval \n                     breaks = c(0, 1, 10, 100, 1000, 10000))\n```\n\n::: {.cell-output-display}\n![](Data-summaries_files/figure-html/unnamed-chunk-3-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ntweets$source[2] #displays the second value in the row\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"Twitter for iPhone\"\n```\n:::\n\n```{.r .cell-code}\n# %>% this is a pipe operator and it can be used to send output from one function into another \ntweet_summary <- tweets %>% # start with the object tweets and then\n  summarise(mean_favs = mean(favorite_count), #summarise it\n            median_favs = median(favorite_count))\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ntweet_summary <- tweets %>%\n  summarise(mean_favs = mean(favorite_count),\n            median_favs = quantile(favorite_count, .5),\n            n = n(),\n            min_date = min(created_at),\n            max_date = max(created_at))\n\nglimpse(tweet_summary)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nRows: 1\nColumns: 5\n$ mean_favs   <dbl> 29.71732\n$ median_favs <dbl> 3\n$ n           <int> 28626\n$ min_date    <dttm> 2021-10-10 00:10:02\n$ max_date    <dttm> 2021-10-12 20:12:27\n```\n:::\n\n```{.r .cell-code}\ntweet_summary$mean_favs #The $ operator\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 29.71732\n```\n:::\n\n```{.r .cell-code}\n#inline coding is also very helpful when it comes to writing paper.\n#You use `r' \ndate_from <- tweet_summary$min_date %>% \n  format(\"%d %B, %Y\")\ndate_to <- tweet_summary$max_date %>% \n  format(\"%d %B, %Y\")\n```\n:::\n\n\nThere were 28626 tweets between 10 October, 2021 and 12 October, 2021.\n \n\n::: {.cell}\n\n```{.r .cell-code}\nverified <- \n  tweets %>% # Start with the original dataset; and then\n  group_by(verified) %>% # group it; and then\n  summarise(count = n(), # summarise it by those groups\n            mean_favs = mean(favorite_count),\n            mean_retweets = mean(retweet_count)) %>%\n  ungroup()\n\nverified\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 2 × 4\n  verified count mean_favs mean_retweets\n  <lgl>    <int>     <dbl>         <dbl>\n1 FALSE    26676      18.4          1.83\n2 TRUE      1950     184.          21.5 \n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nmost_fav <- tweets %>%\n  group_by(is_quote) %>%\n  filter(favorite_count == max(favorite_count)) %>%\n  sample_n(size = 1) %>%\n  ungroup()\n```\n:::\n\n \n#Inline coding 2\n\n::: {.cell}\n\n```{.r .cell-code}\ntweets_per_user <- tweets %>%\n  count(screen_name, sort = TRUE)\n\nhead(tweets_per_user)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 6 × 2\n  screen_name         n\n  <chr>           <int>\n1 interest_outfit    35\n2 LeoShir2           33\n3 NRArchway          32\n4 dr_stack           32\n5 bhavna_95          25\n6 WipeHomophobia     23\n```\n:::\n\n```{.r .cell-code}\nunique_users <- nrow(tweets_per_user)\nmost_prolific <- slice(tweets_per_user, 1) %>% \n  pull(screen_name)\nmost_prolific_n <- slice(tweets_per_user, 1) %>% \n  pull(n)\n```\n:::\n\n There were 25189 unique accounts tweeting about #NationalComingOutDay. interest_outfit was the most prolific tweeter, with 35 tweets.\n \n \n#Extra challenge problem\n\n\n::: {.cell}\n\n```{.r .cell-code}\nny_data <- readr::read_csv(\"New_York_City_Leading_Causes_of_Death.csv\")\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nRows: 1094 Columns: 7\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (6): Leading Cause, Sex, Race Ethnicity, Deaths, Death Rate, Age Adjuste...\ndbl (1): Year\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n```\n:::\n\n```{.r .cell-code}\ncorrected_nydata <-cols(\n  Year = col_double(),\n  `Leading Cause` = col_character(),\n  Sex = col_character(),\n  `Race Ethnicity` = col_character(),\n  Deaths = col_double(),\n  `Death Rate` = col_number(),\n  `Age Adjusted Death Rate` = col_number()\n)\n  \n ny_data <- readr::read_csv(\"New_York_City_Leading_Causes_of_Death.csv\",\n                             col_types = corrected_nydata,\n                              na = \".\"\n                              )\n\n summary_nydata <- ny_data %>%\n   group_by(`Leading Cause`) %>%\n   summarise(mean_death = mean(Deaths, na.rm = TRUE)) %>%\n   ggplot(aes(x=`Leading Cause`, y=mean_death)) +\n   geom_point(na.rm = TRUE)+\n   theme(axis.text.x = element_text(angle = 23, vjust = 1, hjust = 1))+\n   scale_y_continuous(name=\"mean_death\", limits = c(0, 1500, breaks= seq(0,1500,100)))\n\n\nsummary_nydata\n```\n\n::: {.cell-output-display}\n![](Data-summaries_files/figure-html/unnamed-chunk-9-1.png){width=672}\n:::\n:::\n",
    "supporting": [
      "Data-summaries_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}