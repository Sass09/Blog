{
  "hash": "a40bf642b792892deb50f6352197007b",
  "result": {
    "markdown": "---\nauthor: Shifa Maqsood\ntitle: \"Data Relations\"\n---\n\n\n\n\n# Create data\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncustomers <- tibble(\n  id = 1:5,\n  city = c(\"Port Ellen\", \"Dufftown\", NA, \"Aberlour\", \"Tobermory\"),\n  postcode = c(\"PA42 7DU\", \"AB55 4DH\", NA, \"AB38 7RY\", \"PA75 6NR\")\n)\norders <- tibble(\n  id = c(2, 3, 4, 4, 5, 5, 6, 6, 7),\n  items = c(10, 18, 21, 23, 9, 11, 11, 12, 3)\n)\n```\n:::\n\n\n# Mutating Joins\n\n## Left join\n\n\n::: {.cell}\n\n```{.r .cell-code}\nleft_data <- left_join(customers, orders, by = \"id\")\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning in left_join(customers, orders, by = \"id\"): Each row in `x` is expected to match at most 1 row in `y`.\nℹ Row 4 of `x` matches multiple rows.\nℹ If multiple matches are expected, set `multiple = \"all\"` to silence this\n  warning.\n```\n:::\n\n```{.r .cell-code}\nleft_data\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 7 × 4\n     id city       postcode items\n  <dbl> <chr>      <chr>    <dbl>\n1     1 Port Ellen PA42 7DU    NA\n2     2 Dufftown   AB55 4DH    10\n3     3 <NA>       <NA>        18\n4     4 Aberlour   AB38 7RY    21\n5     4 Aberlour   AB38 7RY    23\n6     5 Tobermory  PA75 6NR     9\n7     5 Tobermory  PA75 6NR    11\n```\n:::\n\n```{.r .cell-code}\nleft2_data <- left_join(orders, customers, by = \"id\")\nleft2_data\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 9 × 4\n     id items city      postcode\n  <dbl> <dbl> <chr>     <chr>   \n1     2    10 Dufftown  AB55 4DH\n2     3    18 <NA>      <NA>    \n3     4    21 Aberlour  AB38 7RY\n4     4    23 Aberlour  AB38 7RY\n5     5     9 Tobermory PA75 6NR\n6     5    11 Tobermory PA75 6NR\n7     6    11 <NA>      <NA>    \n8     6    12 <NA>      <NA>    \n9     7     3 <NA>      <NA>    \n```\n:::\n:::\n\n\n## right join\n\n\n::: {.cell}\n\n```{.r .cell-code}\nright_data <- right_join(customers, orders, by = \"id\")\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning in right_join(customers, orders, by = \"id\"): Each row in `x` is expected to match at most 1 row in `y`.\nℹ Row 4 of `x` matches multiple rows.\nℹ If multiple matches are expected, set `multiple = \"all\"` to silence this\n  warning.\n```\n:::\n\n```{.r .cell-code}\nright_data\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 9 × 4\n     id city      postcode items\n  <dbl> <chr>     <chr>    <dbl>\n1     2 Dufftown  AB55 4DH    10\n2     3 <NA>      <NA>        18\n3     4 Aberlour  AB38 7RY    21\n4     4 Aberlour  AB38 7RY    23\n5     5 Tobermory PA75 6NR     9\n6     5 Tobermory PA75 6NR    11\n7     6 <NA>      <NA>        11\n8     6 <NA>      <NA>        12\n9     7 <NA>      <NA>         3\n```\n:::\n:::\n\n\n## inner join\n\n\n::: {.cell}\n\n```{.r .cell-code}\ninner_data <- inner_join(customers, orders, by = \"id\")\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning in inner_join(customers, orders, by = \"id\"): Each row in `x` is expected to match at most 1 row in `y`.\nℹ Row 4 of `x` matches multiple rows.\nℹ If multiple matches are expected, set `multiple = \"all\"` to silence this\n  warning.\n```\n:::\n\n```{.r .cell-code}\ninner_data\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 6 × 4\n     id city      postcode items\n  <dbl> <chr>     <chr>    <dbl>\n1     2 Dufftown  AB55 4DH    10\n2     3 <NA>      <NA>        18\n3     4 Aberlour  AB38 7RY    21\n4     4 Aberlour  AB38 7RY    23\n5     5 Tobermory PA75 6NR     9\n6     5 Tobermory PA75 6NR    11\n```\n:::\n:::\n\n\n## full join\n\n\n::: {.cell}\n\n```{.r .cell-code}\nfull_data <- full_join(customers, orders, by = \"id\")\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning in full_join(customers, orders, by = \"id\"): Each row in `x` is expected to match at most 1 row in `y`.\nℹ Row 4 of `x` matches multiple rows.\nℹ If multiple matches are expected, set `multiple = \"all\"` to silence this\n  warning.\n```\n:::\n\n```{.r .cell-code}\nfull_data\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 10 × 4\n      id city       postcode items\n   <dbl> <chr>      <chr>    <dbl>\n 1     1 Port Ellen PA42 7DU    NA\n 2     2 Dufftown   AB55 4DH    10\n 3     3 <NA>       <NA>        18\n 4     4 Aberlour   AB38 7RY    21\n 5     4 Aberlour   AB38 7RY    23\n 6     5 Tobermory  PA75 6NR     9\n 7     5 Tobermory  PA75 6NR    11\n 8     6 <NA>       <NA>        11\n 9     6 <NA>       <NA>        12\n10     7 <NA>       <NA>         3\n```\n:::\n:::\n\n\n# Filtering Joins\n\n## semi join\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#they can keep or remove rows from table\n\nsemi_data <- semi_join(customers, orders, by = \"id\")\nsemi_data\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 4 × 3\n     id city      postcode\n  <int> <chr>     <chr>   \n1     2 Dufftown  AB55 4DH\n2     3 <NA>      <NA>    \n3     4 Aberlour  AB38 7RY\n4     5 Tobermory PA75 6NR\n```\n:::\n\n```{.r .cell-code}\nsemi2_data <- semi_join(orders, customers, by = \"id\")\nsemi2_data\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 6 × 2\n     id items\n  <dbl> <dbl>\n1     2    10\n2     3    18\n3     4    21\n4     4    23\n5     5     9\n6     5    11\n```\n:::\n:::\n\n\n## anti join\n\n\n::: {.cell}\n\n```{.r .cell-code}\nanti_data <- anti_join(customers, orders, by = \"id\")\nanti_data\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 1 × 3\n     id city       postcode\n  <int> <chr>      <chr>   \n1     1 Port Ellen PA42 7DU\n```\n:::\n\n```{.r .cell-code}\nanti2_data <- anti_join(orders, customers, by = \"id\")\nanti2_data\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 3 × 2\n     id items\n  <dbl> <dbl>\n1     6    11\n2     6    12\n3     7     3\n```\n:::\n:::\n\n\n# Mutliple joins\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsatisfaction <- tibble(\n  id = 1:5,\n  satisfaction = c(4, 3, 2, 3, 1)\n)\n\n\njoin_1 <- left_join(customers, orders, by = \"id\")\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning in left_join(customers, orders, by = \"id\"): Each row in `x` is expected to match at most 1 row in `y`.\nℹ Row 4 of `x` matches multiple rows.\nℹ If multiple matches are expected, set `multiple = \"all\"` to silence this\n  warning.\n```\n:::\n\n```{.r .cell-code}\njoin_2 <- left_join(join_1, satisfaction, \n                    by = \"id\")\n\n\n\n\npipe_join <- customers %>%\n  left_join(orders, by = \"id\") %>%\n  left_join(satisfaction, by = \"id\")\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning in left_join(., orders, by = \"id\"): Each row in `x` is expected to match at most 1 row in `y`.\nℹ Row 4 of `x` matches multiple rows.\nℹ If multiple matches are expected, set `multiple = \"all\"` to silence this\n  warning.\n```\n:::\n:::\n\n\n# Binding joins\n\n\n::: {.cell}\n\n```{.r .cell-code}\nnew_customers <- tibble(\n  id = 6:9,\n  city = c(\"Falkirk\", \"Ardbeg\", \"Doogal\", \"Kirkwall\"),\n  postcode = c(\"FK1 4RS\", \"PA42 7EA\", \"G81 4SJ\", \"KW15 1SE\")\n)\n\nbindr_data <- bind_rows(customers, new_customers)\nbindr_data\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 9 × 3\n     id city       postcode\n  <int> <chr>      <chr>   \n1     1 Port Ellen PA42 7DU\n2     2 Dufftown   AB55 4DH\n3     3 <NA>       <NA>    \n4     4 Aberlour   AB38 7RY\n5     5 Tobermory  PA75 6NR\n6     6 Falkirk    FK1 4RS \n7     7 Ardbeg     PA42 7EA\n8     8 Doogal     G81 4SJ \n9     9 Kirkwall   KW15 1SE\n```\n:::\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}