{
  "hash": "ce9c95f04dfd2a060ed705aab755c0b6",
  "result": {
    "markdown": "---\ntitle: \"Data Import\"\nauthor: Shifa Maqsood\n---\n\n\n\n\n#Built-in data\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#data(cars)\n\n  #this shows your data\n\n#view(cars) \n\n  #one of the way you can view your data\n```\n:::\n\n\n#Importing data\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# rio::import() is helpful\navatar <- readr::read_csv(\"data/avatar.csv\")\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nRows: 3 Columns: 3\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (2): name, bends\nlgl (1): friendly\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n```\n:::\n\n```{.r .cell-code}\n#spec() function enables us to change our data type simultaneously, first load package readr::read_whatever file type\n```\n:::\n\n\n#Creating data\n\n\n::: {.cell}\n\n```{.r .cell-code}\n random_data <- data.frame(\n   random_number = c(1,5),\n   random_words = c(\"water\", \"earth\")\n \n     )\nrandom_data %>%\n  mutate( c(\"tf\",\"hh\"))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n  random_number random_words c(\"tf\", \"hh\")\n1             1        water            tf\n2             5        earth            hh\n```\n:::\n:::\n\n\n#Writing data\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#try making data frame, export it, then remove it from environment\nfamily <- data.frame(\n  first_name= c(\"lisa\", \"James\"),\n  last_name = c(\"Robert\", \"Jones\"),\n  Ages = c(34,40)\n)\nexport(family, \"data/family.csv\")\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n#import data after deleting it  from environment\ntry_importing <- import(\"data/family.csv\")\n```\n:::\n\n# Convert column types of a data set\n\n\n::: {.cell}\n\n```{.r .cell-code}\nstarwars <-read_csv(\"data/starwars.csv\")\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nRows: 87 Columns: 14\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (11): name, hair_color, skin_color, eye_color, sex, gender, homeworld, s...\ndbl  (3): height, mass, birth_year\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n```\n:::\n\n```{.r .cell-code}\n#use this function: spec(starwars) \n \nct <- cols(\n  name = col_character(),\n  height = col_factor(),\n  mass = col_double(),\n  hair_color = col_factor(),\n  skin_color = col_factor(),\n  eye_color = col_factor(),\n  birth_year = col_double(),\n  sex = col_factor(),\n  gender = col_factor(),\n  homeworld = col_factor(),\n  species = col_factor(),\n  films = col_skip(),\n  vehicles = col_skip(),\n  starships = col_skip()\n)\n\nstarwars <- read_csv(\"data/starwars.csv\",\n                   col_types = ct)\n\n\n\nstarwars <-read_csv(\"data/starwars.csv\", col_types = ct)\n```\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}